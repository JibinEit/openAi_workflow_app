name: "JibinBot – PR Code Review"

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    name: "Run JibinBot Review"
    runs-on: ubuntu-latest

    steps:
      # 1) CHECKOUT THE CODE
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) SET UP PYTHON
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3) INSTALL PYTHON DEPENDENCIES (including flake8-json)
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai PyGithub flake8 flake8-json

      # 4) INSTALL NODE & ESLINT
      - name: Set up Node 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install ESLint
        run: npm install -g eslint

      # 5) INSTALL SHELLCHECK
      - name: Install ShellCheck
        run: |
          sudo apt-get update && sudo apt-get install -y shellcheck

      # 6) INSTALL .NET SDK (for C# linting/formatting)
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      # 7) SET UP DART/FLUTTER
      - name: Install Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "stable"

      # 8) RUN LINTERS → OUTPUT TO FILES
      - name: Create linter-reports directory
        run: mkdir -p .github/linter-reports

      ## 8.1) ESLint (JS/TS/React/Angular)
      - name: Run ESLint
        run: |
          eslint '**/*.js' '**/*.jsx' '**/*.ts' '**/*.tsx' \
            --format json \
            --output-file .github/linter-reports/eslint.json || true

      ## 8.2) Flake8 (Python, using flake8-json)
      - name: Run Flake8
        run: |
          flake8 . --format=json --output-file .github/linter-reports/flake8.json || true

      ## 8.3) ShellCheck (shell scripts)
      - name: Run ShellCheck
        run: |
          find . -type f -name "*.sh" \
            | xargs -I {} sh -c "shellcheck -f json {} 2>/dev/null >> .github/linter-reports/shellcheck.json" || true

      ## 8.4) Dart Analyzer (Flutter/Dart)
      - name: Run Dart Analyzer
        run: |
          dart analyze --format=json \
            > .github/linter-reports/dartanalyzer.json || true

      ## 8.5) .NET Format Check (C#/.NET)
      - name: Run dotnet format
        run: |
          dotnet tool install -g dotnet-format --version 7.* || true
          PATH="$PATH:$HOME/.dotnet/tools"
          mkdir -p .github/linter-reports
          dotnet format --verify-no-changes --dry-run --report .github/linter-reports/dotnet-format.json || true

      # 9) RUN THE AI REVIEW SCRIPT
      - name: Run JibinBot AI review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: |
          python .github/scripts/jibinbot_review.py