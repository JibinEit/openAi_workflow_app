name: "JibinBot – PR Code Review"

# ── 1) WHEN TO RUN ───────────────────────────────────────────────────────
on:
  pull_request:
    types: [opened, synchronize, reopened]

# ── 2) PERMISSIONS ──────────────────────────────────────────────────────
permissions:
  contents: read          # to fetch the code
  pull-requests: write    # to post review comments

jobs:
  review:
    name: "Run JibinBot Review"
    runs-on: ubuntu-latest

    steps:
      # ── 2.1) CHECKOUT THE CODE ─────────────────────────────────────────
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # fetch full history so we can compute diffs

      # ── 2.2) SET UP PYTHON ─────────────────────────────────────────────
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # ── 2.3) INSTALL PYTHON DEPENDENCIES ───────────────────────────────
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai PyGithub

      # ── 2.4) INSTALL COMMON LINTERS ───────────────────────────────────
      - name: Install Node & ESLint
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install ESLint
        run: |
          npm install -g eslint
      - name: Install Flake8 & ShellCheck
        run: |
          pip install flake8
          sudo apt-get update && sudo apt-get install -y shellcheck

      # ── 2.5) RUN LINTERS → OUTPUT TO FILES ────────────────────────────
      - name: Run ESLint (JavaScript/TypeScript)
        run: |
          # Exit code will be non-zero if lint errors exist.
          # We capture output into a text file so our Python script can include it.
          mkdir -p .github/linter-reports
          eslint '**/*.js' '**/*.jsx' '**/*.ts' '**/*.tsx' --format json --output-file .github/linter-reports/eslint.json || true

      - name: Run Flake8 (Python)
        run: |
          mkdir -p .github/linter-reports
          flake8 . --format=json > .github/linter-reports/flake8.json || true

      - name: Run ShellCheck (Shell scripts)
        run: |
          mkdir -p .github/linter-reports
          find . -type f -name "*.sh" | xargs -I {} sh -c "shellcheck -f json {} 2>/dev/null >> .github/linter-reports/shellcheck.json" || true

      # ── 2.6) RUN THE AI REVIEW SCRIPT ─────────────────────────────────
      - name: Run JibinBot AI review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: |
          python .github/scripts/jibinbot_review.py